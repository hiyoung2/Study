# print문과 format함수
a = '사과'
b = '배'
c = '옥수수'

print('선생님은 잘생기셨다.')        # 맞는 문장? True? False? 


print(a)
print(a, b)
print(a, b, c)

print("나는 {0}를 먹었다.".format(a))
                                    # {}중괄호 안에 0을 씀
                                    # .format에 있는 첫 번째 변수를 쓰겠다는 뜻.
                                    # a, 사과가 {0}안에 대입, "나는 사과를 먹었다" 출력
print("나는 {0}와 {1}를 먹었다.".format(a, b)) 
                                    # {0} : a, {1} : b
                                    # {} 안에 숫자는 format() 안의 인자와 매칭    
print("나는{0}와 {1}와 {2}를 먹었다.".format(a, b, c))
                                    # 출력 : 나는 사과와 배와 옥수수를 먹었다.

##################### 여기까진 옛날 방식

##################### New
print('나는', a, '를 먹었다.')        # ,comma로 문자열 병합할 수 있다
print('나는', a, '와', b, '를 먹었다.')
print('나는', a, '와', b, '와', c, '를 먹었다.')

# 그런데, 출력된 문장의 띄어쓰기가 이상하다. 어떻게 해결?
# 방법 1 : sep(seperattion)
print('나는 ', a, '를 먹었다.', sep = '')  # 공백이 있는 부분을 ''(공백X)으로 나눠준다 -> 공백이 사라진다
print('나는 ', a, '와 ', b, '를 먹었다.', sep = '')
print('나는 ', a, '와 ', b, '와 ', c, '를 먹었다.', sep = '')

# 나는 사과를 먹었다.
# 나는 사과와 배를 먹었다.
# 나는 사과와 배와 옥수수를 먹었다.

# sep?
print('나는 ', a, '를 먹었다.', sep = '#') 
print('나는 ', a, '와 ', b, '를 먹었다.', sep = '#')
print('나는 ', a, '와 ', b, '와 ', c, '를 먹었다.', sep = '#')


# 방법 2 : +
print('나는', a+ '를 먹었다.')  
print('나는', a+ '와', b+ '를 먹었다.')
print('나는', a+ '와', b+ '와', c+ '를 먹었다.')

# 나는 사과를 먹었다.
# 나는 사과와 배를 먹었다.
# 나는 사과와 배와 옥수수를 먹었다.