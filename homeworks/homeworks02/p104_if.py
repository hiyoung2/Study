# 4.4 if문

# 4.4.1 비교 연산자
# 비교 연산자는 연산자 좌우에 있는 두 값의 관계를 조사한다
# 좌우가 동일한 경우에는 '=='을, 다른 경우에는 '!='을, 부등호는 >, < ,>=, <=과 같이 사용할 수 있다
# '='은 사용되지 않는다는 점을 주의
# 프로그래밍의 세계에서는 '='은 대입을 의미하는 기호!!!

# bool형 : 불리언 자료형
# bool형은 True 또는 False 중 하나의 값을 가진 자료형이다
# int형으로 변환하면 True는 1, False는 0으로 변환된다
# 비교 연산자를 사용한 식이 성립할 때는 True, 성립하지 않을 때는 False이다

print(1 + 1 == 3) # False

print(4 + 6 != -10) # True

# 4.4.2 if문
# if문은 'if 조건식 : ...'의 형태를 하고 있고, '만약 조건식이 성립한다면! ... 을 실시한다'는 조건에 따른 분기를 구현할 수 있다
# 조건식은 비교 연산자를 사용한 식으로, 조건식이 성립하는 True일 때만 후반의 처리를 한다
# 조건문의 끝에는 ':'이 필요하다!!! 
# 파이썬에 익숙해지기 전까지는 ':'을 잊어버리기 쉬우므로 주의

# 또한 조건식이 성립했을 때 수행할 범위를 나타내기 위해 반드시 들여쓰기(인덴트, indentation)를 해야 한다
# 조건식이 성립했을 때의 행동 범위를 들여쓰기하는 것은 파이썬의 특징이다
# if문이 True일 경우에 들여쓰기한 부분이 처리된다

# PEB 8이라는 파이썬 코딩 규야갸에는 코드의 가독성을 위해 들여쓰기는 공백(스페이스) 네 개가 바람직하다고 되어 있다
# 주피터 노트북에서는 ':'을 입력하고 줄 바꿈을 하면 자동으로 공백 네 개 분량의 들여쓰기가 된다

n = 2
if n == 2 :
    print("아쉽습니다! 당신은 " + str(n) + "번째로 도착했습니다.")

# 아쉽습니다! 당신은 2번째로 도착했습니다.

animal = 'cat'
if animal == 'cat' :
    print("고양이가 귀엽네요") # 고양이가 귀엽네요

# if문을 사용하면 변수 n이 15보다 크면 '큰 숫자'라고 출력해라
n = 16
if n > 15 :
    print("큰 숫자") # 큰 숫자

# 4.4.3 else
# if 문에 else를 사용하면 '그렇지 않으면! ...을 한다'처럼 조건에 따른 분기를 세밀하게 할 수 있다
# 사용법은 if와 똑같은 들여쓰기 위치에서 else : 라고 쓴다
# if에서처럼 처리될 부분을 들여쓰기 해서 나타낸다

# else의 예
n = 2
if n == 1 :
    print("우승을 축하합니다")
else :
    print("아쉽습니다! 당신은 " + str(n) + "번째로 도착했습니다.") 

# 아쉽습니다! 당신은 2번째로 도착했습니다.

animal = 'cat'
if animal == 'cat' :
    print('고양이가 귀엽네요.')
else :
    print('고양이가 아닙니다')  # 고양이가 귀엽네요.

# 문제 : else를 이용하여 n이 15보다 작으면 '작은 숫자' 라고 출력하세요
n = 14
if n > 15 :
    print('큰 숫자')
else :
    print('작은 숫자') # 작은 숫자

# if와 else의 위치를 맞춰줘야 한다!

# 4.4.4 elif
# if 문의 조건이 성립되지 않았을 경우, 다른 조건을 정의하고 싶을 때 elif를 사용할 수 있다
# 물론 여러 elif를 설정할 수도 있다
# 사용법 및 들여쓰기는 if와 동일하다

# elif는 if에서 지정한 조건에 해당하지 않을 때 위에서 아래 순서로 조건에 해당하는지 판단한다

# number = 2
number = 10

if number == 1 :
    print("금메달입니다!")
elif number == 2 :
    print("은메달입니다!")
elif number == 3 :
    print("동메달입니다!")
else :
    print("아쉽습니다! 당신은 " + str(number) + "번째로 도착했습니다.") # 은메달입니다!

# 은메달입니다!
# number = 10 으로 대입 -> 아쉽습니다! 당신은 10번째로 도착했습니다.

# animal = 'cat'
animal = 'rabbit'
if animal == 'cat' :
    print('고양이가 귀엽네요.')
elif animal == 'dog' :
    print('강아지가 잘생겼네요.')
elif animal == 'elephant' :
    print('코끼리가 크네요.')
else :
    print("고양이도, 개도, 코끼리도 아니군요.")

# 고양이가 귀엽네요.
# animal = 'rabbit' 으로 변경 -> 고양이도, 개도, 코끼리도 아니군요.

# 문제 : elif를 사용하여 n이 11 이상 15 이하일 때 '중간 숫자'라고 출력하도록 작성
n = 14
if n > 15 :
    print("큰 숫자")
elif n >= 11:
    print("중간 숫자") # 중간 숫자

# 4.4.5 and, or, not
# and, or not : 부울 연산자, 조건 분기문을 기술할 때 사용한다
# and나 or은 조건식 사이에 사용하며, and는 복수의 조건식이 모두 True인 경우 True를 반환하고
# or은 복수의 조건식 중 하나라도 True일 경우에 True를 반환한다
# not은 조건식 앞에 사용하며, 조건이 True인 경우 False를 반환, False인 경우 True를 반환

# 조건식 and 조건식
# 조건식 or 조건식
# not 조건식

# 문제 
# 변수 n_1이 8보다 크고 14보다 작다는 조건식을 만들고, 결괏값 False를 출력
# 변수 n_1의 제곱이 변수 n_2의 다섯 배보다는 작다는 조건식을 만들고, not을 사용하여 결괏값 True를 출력

n_1 = 14
n_2 = 28

print(n_1 > 8 and n_1 < 14) # False
print(not n_1 ** 2 < n_2*5) # True

# 연습문제
# 윤년 여부를 검사하는 프로그램 작성
# 연도가 400으로 나누어 떨어지지 않고, 100으로 나누어 떨어지면 윤년이 아니다(평년이다)
# 위와 같지 않을 때 연도가 4로 나누어 떨어지면 윤년이다
# 윤년이 아닌 경우는 평년이다
# 윤년의 경우 '**년은 윤년입니다' 라고 출력
# 평년의 경우 '**년은 평년입니다' 라고 출력

year = 2000
if (year % 400 != 0) and (year % 100 == 0) :
    print(str(year) + '년은 평년입니다')
elif (year % 4 == 0) :
    print(str(year) + '년은 윤년입니다')
else :
    print(str(year) + '년은 평년입니다.')

# 2000년은 윤년입니다

