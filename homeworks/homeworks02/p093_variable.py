# 4.2 변수
# 4.2.1 변수 정의
# 프로그램 안에서 여러 번 같은 값을 출력하고 싶을 때가 있다
# 이 때 한 번 출력한 값의 모든 것을 하나하나 바꾸는 것은 시간 오래 걸림
# 그래서 값에 대해 이름을 붙임으로써 이름으로 값을 사용할 수 있도록 하는 구조를 변수, variable 이라고 한다
# 상자라고 생각하면 좋음, 값을 넣어두는 상자

# 변수는 '변수명 = 값'으로 정의한다
# 프로그래밍에서 '='은 '같다'라는 의미가 아니라 우변의 값을 좌변의 변수명에 대입(저장)하라는 의미이다
# 변수명은 의미 있는 이름으로 정해야 한다
# 변수의 값을 출력할 때는 변수에 문자열이 포함되어 있더라도 숫자처럼 따옴표를 사용하지 않는다

n = '강아지'
print(n) # 강아지

# 변수명을 정할 때의 몇 가지 규칙
# 변수명에 사용할 수 있는 문자는 다음 세 가지
# 1) 알파벳(대문자, 소문자)
# 2) 숫자
# 3) _(밑줄 문자)
# 변수명의 첫 글자는 숫자를 사용할 수 없다
# 예약어나 키워드(if나 for 등 코드에서 특별한 의미를 가진 단어)를 변수명으로 사용하지 말 것
# 사전 정의되어 있는 함수명(print, list 등)은 변수명으로 사용하지 말 것
# 예약어나 키워드, 함수명은 변수명으로 사용해도 당분간 오류가 발생하지 않지만 같은 이름의 처리문을 사용하면 에러가 발생

# print = "Hello"
# print(print) # TypeError: 'str' object is not callable

n = '고양이'
print(n) # 고양이
print('n') # n
n = 3 + 7
print(n) # 10

# 4.2.2 변수 갱신
# 기존 변수에 새로운 값을 대입하면 변수가 새로운 값으로 덮어써진다
x = 1
print(x) # 1
x = x + 1
print(x) # 2

# x = x + 1은 x += 1 과 같이 짧게 적을 수 있다
# x = x-1 도 x -= 1, x = x*2 도 x *= 2, x = x / 2도 x /= 2로 적을 수 있다

x = 5
x += 2
print(x) # 7

m = '강아지'
print(m) # 강아지
n = 14
n *= 5
print(n) # 70

# 4.2.3 문자열 연결
# '+'는 수치 계산뿐만 아니라 문자열 연결에도 사용할 수 있다
# 물론 변수와 문자열, 변수끼리의 연결도 가능하다
# 이 때, 변수를 따옴표로 감싸지 않도록 주의!
m = "홍길동"
print("내 이름은 "+ m + "입니다.") # 내 이름은 홍길동입니다.

p = "서울"
print("나는 " + p + " 출신입니다.") # 나는 서울 출신입니다.